name: Cache Node and NPM Dependencies

description: "This action allows to cache both Node and NPM dependencies based on the package-lock.json file."

inputs:
  node-version:
    required: true
    description: NodeJS version to use
    default: 20.x

  working-dir:
    required: false
    description: The working directory of the application
    default: .

  target-env:
    required: false
    description: "dev or prod. Controls whether dev dependencies are installed"
    default: "dev"


runs: 
  using: composite
  steps: 
    - name: Setup NodeJS version ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
      
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ inputs.working-dir }}/node_modules
        key: node-${{inputs.target-env}}-${{ hashFiles(format('{0}/{1}', inputs.working-dir, 'package-lock.json' ) }}

    - name: Install dev dependencies
      shell: bash
      working-directory: ${{ inputs.working-dir }}
      if: steps.cache.outputs.cache-hit != 'true' &&  inputs.target-env == 'dev'
      run: npm ci 
      # run: ${{ inputs.target-env == 'dev' && 'npm cx' || 'npm ci --omit=dev' }}  ## instead of duplication

    - name: Install prod dependencies
      shell: bash
      working-directory: ${{ inputs.working-dir }}
      if: steps.cache.outputs.cache-hit != 'true' &&  inputs.target-env != 'dev'
      run: npm ci --omit=dev